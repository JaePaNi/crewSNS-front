[{"C:\\Users\\JaePaNi\\Desktop\\dev\\crewSNS-front\\src\\index.js":"1","C:\\Users\\JaePaNi\\Desktop\\dev\\crewSNS-front\\src\\App.js":"2","C:\\Users\\JaePaNi\\Desktop\\dev\\crewSNS-front\\src\\component\\main.js":"3","C:\\Users\\JaePaNi\\Desktop\\dev\\crewSNS-front\\src\\component\\post.js":"4","C:\\Users\\JaePaNi\\Desktop\\dev\\crewSNS-front\\src\\component\\notLogin.js":"5","C:\\Users\\JaePaNi\\Desktop\\dev\\crewSNS-front\\src\\component\\login.js":"6","C:\\Users\\JaePaNi\\Desktop\\dev\\crewSNS-front\\src\\component\\signUp.js":"7","C:\\Users\\JaePaNi\\Desktop\\dev\\crewSNS-front\\src\\store\\index.js":"8","C:\\Users\\JaePaNi\\Desktop\\dev\\crewSNS-front\\src\\store\\configure.js":"9","C:\\Users\\JaePaNi\\Desktop\\dev\\crewSNS-front\\src\\store\\storeUser.js":"10","C:\\Users\\JaePaNi\\Desktop\\dev\\crewSNS-front\\src\\store\\storePost.js":"11","C:\\Users\\JaePaNi\\Desktop\\dev\\crewSNS-front\\src\\axios\\axiosPost.js":"12"},{"size":657,"mtime":1610942913743,"results":"13","hashOfConfig":"14"},{"size":828,"mtime":1610430590791,"results":"15","hashOfConfig":"14"},{"size":946,"mtime":1610948395277,"results":"16","hashOfConfig":"14"},{"size":4880,"mtime":1611042397911,"results":"17","hashOfConfig":"14"},{"size":2233,"mtime":1610951400537,"results":"18","hashOfConfig":"14"},{"size":821,"mtime":1610948357226,"results":"19","hashOfConfig":"14"},{"size":2803,"mtime":1610430590798,"results":"20","hashOfConfig":"14"},{"size":223,"mtime":1610948595326,"results":"21","hashOfConfig":"14"},{"size":245,"mtime":1611036961642,"results":"22","hashOfConfig":"14"},{"size":600,"mtime":1611022523898,"results":"23","hashOfConfig":"14"},{"size":2969,"mtime":1611046572912,"results":"24","hashOfConfig":"14"},{"size":260,"mtime":1610953576877,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"sz8iyi",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"29"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"29"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"29"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"C:\\Users\\JaePaNi\\Desktop\\dev\\crewSNS-front\\src\\index.js",["55"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport { createBrowserHistory } from 'history';\r\nimport { createGlobalStyle } from 'styled-components';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store/configure';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n\r\n  body {\r\n    background-color: #fff3e0;\r\n  }\r\n`\r\n\r\nconst customHistory = createBrowserHistory();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n    <GlobalStyle />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n  ;\r\n",["56","57"],"C:\\Users\\JaePaNi\\Desktop\\dev\\crewSNS-front\\src\\App.js",[],"C:\\Users\\JaePaNi\\Desktop\\dev\\crewSNS-front\\src\\component\\main.js",[],"C:\\Users\\JaePaNi\\Desktop\\dev\\crewSNS-front\\src\\component\\post.js",["58","59"],"C:\\Users\\JaePaNi\\Desktop\\dev\\crewSNS-front\\src\\component\\notLogin.js",["60","61"],"import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Input, Button } from 'antd';\r\nimport styled from 'styled-components';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../store/storeUser';\r\n\r\nconst LoginForm = () => {\r\n    const [userInput, setUserInput] = useState({ id: null, pw: null });\r\n    const onloadFocus = useRef(null);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    //로그인 아닌 경우 아이디 입력 창에 자동 포커싱\r\n    useEffect(() => {\r\n        onloadFocus.current.focus();\r\n    }, []);\r\n\r\n    const onInputSuccess = useCallback(e => {\r\n        setUserInput({ ...e });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        userInput.id !== null ?\r\n            userInput.pw !== null ?\r\n                dispatch(login({...userInput})) : console.log('undefined') : console.log('undefined');\r\n    }, [userInput]);\r\n\r\n    const onInputError = useCallback(e => { });\r\n\r\n    return (\r\n        <Wrap>\r\n            <Form size='middle' onFinish={onInputSuccess} onFinishFailed={onInputError}\r\n                wrapperCol={{ md: 18, xs: 12 }}>\r\n                <Form.Item name=\"id\" rules={[\r\n                    {\r\n                        required: true,\r\n                        message: '계정 입력'\r\n                    }\r\n                ]}>\r\n                    <Input placeholder=\"아이디\" ref={onloadFocus} />\r\n                </Form.Item>\r\n                <Form.Item name=\"pw\" rules={[\r\n                    {\r\n                        required: true,\r\n                        message: '비밀번호 입력'\r\n                    }\r\n                ]}>\r\n                    <Input type=\"password\" placeholder=\"비밀번호\" />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <LoginButton type=\"primary\" htmlType=\"submit\">로그인</LoginButton>\r\n                    <Button type=\"ghost\"><Link to='/signup'>회원가입</Link></Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </Wrap>\r\n    );\r\n}\r\n\r\nexport default LoginForm;\r\n\r\n\r\nconst LoginButton = styled(Button)`\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst Wrap = styled.div`\r\n  position: sticky;\r\n  top: 15px;\r\n`;","C:\\Users\\JaePaNi\\Desktop\\dev\\crewSNS-front\\src\\component\\login.js",["62"],"import { useCallback } from 'react';\r\nimport { Card, Typography, Row, Col, Button } from 'antd';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logout } from '../store/storeUser';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst Login = () => {\r\n    const dispatch = useDispatch();\r\n    const userNickname = useSelector(state => state.storeUser.userNickname);\r\n    const onClickLogout = useCallback(() => {\r\n        dispatch(logout());\r\n    }, []);\r\n\r\n    return (\r\n        <Card size=\"small\" hoverable>\r\n            <Row>\r\n                <Col span={24} style={{ textAlign: 'center' }}><Title level={4}>{userNickname}님</Title></Col>\r\n                <Col span={24}><Button block onClick={onClickLogout}>로그아웃</Button></Col>\r\n            </Row>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default Login;","C:\\Users\\JaePaNi\\Desktop\\dev\\crewSNS-front\\src\\component\\signUp.js",["63","64"],"import React, {useState, useEffect, useCallback, useRef} from 'react';\r\n\r\nimport {Form, Input, Button, Row, Col} from 'antd';\r\nimport styled from 'styled-components';\r\n\r\nconst SignUp = () => {\r\n    const [inputData, setInputData] = useState({id: null, pw: null, pwCheck: true});\r\n    const onloadFocus = useRef();\r\n    const onInputSuccess = useCallback(e => {\r\n        /*inputData pwCheck가 true이면 넘어 온 값 inputData useState에 저장*/\r\n        inputData.pwCheck &&\r\n        setInputData({...e, pwCheck: true});\r\n    }, []);\r\n\r\n    const onInputError = useCallback(e => {\r\n\r\n    });\r\n\r\n    useEffect(() => {\r\n        onloadFocus.current.focus();\r\n    }, []);\r\n\r\n    return (\r\n        <Row justify='center'>\r\n            <Col md={6} xs={22}>\r\n                <Form size='middle' onFinish={onInputSuccess} onFinishFailed={onInputError}\r\n                      wrapperCol={{md: 24, xs: 12}}>\r\n\r\n                    <Form.Item name=\"id\" rules={[\r\n                        {\r\n                            required: true,\r\n                            message: '사용할 계정 입력해주세요'\r\n                        }\r\n                    ]}>\r\n                        <Input placeholder=\"사용할 아이디\" ref={onloadFocus}/>\r\n                    </Form.Item>\r\n                    <Form.Item name=\"pw\" rules={[\r\n                        {\r\n                            required: true,\r\n                            message: '사용할 비밀번호 입력해주세요'\r\n                        }\r\n                    ]}>\r\n                        <Input.Password placeholder=\"사용할 비밀번호\"\r\n                            /*pw 확인을 하기 위해서 inputData useState에 저장*/\r\n                                        onChange={e => setInputData({...inputData, pw: e.target.value})}/>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name=\"pwCheck\">\r\n                        <Input.Password placeholder=\"비밀번호 확인\"\r\n                                        onChange={e => inputData.pw === e.target.value\r\n                                            ? setInputData({...inputData, pwCheck: true})\r\n                                            : setInputData({...inputData, pwCheck: false})}/>\r\n                        {inputData.pwCheck === false ? <PwCheck>비밀번호가 다릅니다.</PwCheck> : undefined}\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <LoginButton type=\"primary\" htmlType=\"submit\" block>회원가입</LoginButton>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default SignUp;\r\n\r\n\r\nconst LoginButton = styled(Button)`\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst PwCheck = styled.div`\r\n  font-weight: bold;\r\n  color: red;\r\n`;","C:\\Users\\JaePaNi\\Desktop\\dev\\crewSNS-front\\src\\store\\index.js",[],"C:\\Users\\JaePaNi\\Desktop\\dev\\crewSNS-front\\src\\store\\configure.js",[],"C:\\Users\\JaePaNi\\Desktop\\dev\\crewSNS-front\\src\\store\\storeUser.js",["65"],"C:\\Users\\JaePaNi\\Desktop\\dev\\crewSNS-front\\src\\store\\storePost.js",["66"],"C:\\Users\\JaePaNi\\Desktop\\dev\\crewSNS-front\\src\\axios\\axiosPost.js",[],{"ruleId":"67","severity":1,"message":"68","line":21,"column":7,"nodeType":"69","messageId":"70","endLine":21,"endColumn":20},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":27,"column":8,"nodeType":"77","endLine":27,"endColumn":10,"suggestions":"78"},{"ruleId":"75","severity":1,"message":"79","line":40,"column":8,"nodeType":"77","endLine":40,"endColumn":29,"suggestions":"80"},{"ruleId":"75","severity":1,"message":"76","line":28,"column":8,"nodeType":"77","endLine":28,"endColumn":19,"suggestions":"81"},{"ruleId":"75","severity":1,"message":"82","line":30,"column":26,"nodeType":"69","endLine":30,"endColumn":37},{"ruleId":"75","severity":1,"message":"83","line":14,"column":8,"nodeType":"77","endLine":14,"endColumn":10,"suggestions":"84"},{"ruleId":"75","severity":1,"message":"85","line":13,"column":8,"nodeType":"77","endLine":13,"endColumn":10,"suggestions":"86"},{"ruleId":"75","severity":1,"message":"82","line":15,"column":26,"nodeType":"69","endLine":15,"endColumn":37},{"ruleId":"67","severity":1,"message":"87","line":13,"column":24,"nodeType":"69","messageId":"70","endLine":13,"endColumn":26},{"ruleId":null,"fatal":true,"severity":2,"message":"88","line":46,"column":11},"no-unused-vars","'customHistory' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["89"],"no-negated-in-lhs",["90"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["91"],"React Hook useCallback has missing dependencies: 'dispatch' and 'userNickname'. Either include them or remove the dependency array.",["92"],["93"],"React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["94"],"React Hook useCallback has a missing dependency: 'inputData.pwCheck'. Either include it or remove the dependency array.",["95"],"'pw' is assigned a value but never used.","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 44 | \u001b[39m                    replyCreateDate\u001b[33m:\u001b[39m time\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 45 | \u001b[39m                })))\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 46 | \u001b[39m        })\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 47 | \u001b[39m    }\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 48 | \u001b[39m    extraReducers\u001b[33m:\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 49 | \u001b[39m        [fetchPost\u001b[33m.\u001b[39mpending]\u001b[33m:\u001b[39m (state\u001b[33m,\u001b[39m action) \u001b[33m=>\u001b[39m {\u001b[0m","no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},{"desc":"98","fix":"99"},{"desc":"100","fix":"101"},{"desc":"96","fix":"102"},{"desc":"103","fix":"104"},"Update the dependencies array to be: [dispatch]",{"range":"105","text":"106"},"Update the dependencies array to be: [dispatch, inputReply, isLogin, userNickname]",{"range":"107","text":"108"},"Update the dependencies array to be: [dispatch, userInput]",{"range":"109","text":"110"},{"range":"111","text":"106"},"Update the dependencies array to be: [inputData.pwCheck]",{"range":"112","text":"113"},[874,876],"[dispatch]",[1286,1307],"[dispatch, inputReply, isLogin, userNickname]",[884,895],"[dispatch, userInput]",[459,461],[514,516],"[inputData.pwCheck]"]