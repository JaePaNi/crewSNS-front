[{"C:\\Users\\217-Pro\\Desktop\\jh\\crewSNS-front\\src\\index.js":"1","C:\\Users\\217-Pro\\Desktop\\jh\\crewSNS-front\\src\\store\\configure.js":"2","C:\\Users\\217-Pro\\Desktop\\jh\\crewSNS-front\\src\\App.js":"3","C:\\Users\\217-Pro\\Desktop\\jh\\crewSNS-front\\src\\store\\index.js":"4","C:\\Users\\217-Pro\\Desktop\\jh\\crewSNS-front\\src\\store\\thunk\\thunkUser.js":"5","C:\\Users\\217-Pro\\Desktop\\jh\\crewSNS-front\\src\\component\\signUp.js":"6","C:\\Users\\217-Pro\\Desktop\\jh\\crewSNS-front\\src\\component\\main.js":"7","C:\\Users\\217-Pro\\Desktop\\jh\\crewSNS-front\\src\\component\\postAdd.js":"8","C:\\Users\\217-Pro\\Desktop\\jh\\crewSNS-front\\src\\store\\storeUser.js":"9","C:\\Users\\217-Pro\\Desktop\\jh\\crewSNS-front\\src\\store\\storePost.js":"10","C:\\Users\\217-Pro\\Desktop\\jh\\crewSNS-front\\src\\component\\notLogin.js":"11","C:\\Users\\217-Pro\\Desktop\\jh\\crewSNS-front\\src\\component\\login.js":"12","C:\\Users\\217-Pro\\Desktop\\jh\\crewSNS-front\\src\\component\\postList.js":"13","C:\\Users\\217-Pro\\Desktop\\jh\\crewSNS-front\\src\\store\\thunk\\thunkPost.js":"14","C:\\Users\\217-Pro\\Desktop\\jh\\crewSNS-front\\src\\component\\coverImage.js":"15","C:\\Users\\217-Pro\\Desktop\\jh\\crewSNS-front\\src\\component\\desc.js":"16"},{"size":616,"mtime":1611288010017,"results":"17","hashOfConfig":"18"},{"size":181,"mtime":1611557200948,"results":"19","hashOfConfig":"18"},{"size":1293,"mtime":1611556936283,"results":"20","hashOfConfig":"18"},{"size":223,"mtime":1611532976109,"results":"21","hashOfConfig":"18"},{"size":1195,"mtime":1611557205478,"results":"22","hashOfConfig":"18"},{"size":4247,"mtime":1611532976107,"results":"23","hashOfConfig":"18"},{"size":1721,"mtime":1611563124079,"results":"24","hashOfConfig":"18"},{"size":3867,"mtime":1611546538804,"results":"25","hashOfConfig":"18"},{"size":2623,"mtime":1611532976114,"results":"26","hashOfConfig":"18"},{"size":2834,"mtime":1611563188044,"results":"27","hashOfConfig":"18"},{"size":2542,"mtime":1611532976098,"results":"28","hashOfConfig":"18"},{"size":1426,"mtime":1611532976094,"results":"29","hashOfConfig":"18"},{"size":1728,"mtime":1611557330793,"results":"30","hashOfConfig":"18"},{"size":1106,"mtime":1611532976116,"results":"31","hashOfConfig":"18"},{"size":1684,"mtime":1611559089313,"results":"32","hashOfConfig":"18"},{"size":2431,"mtime":1611557074927,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},"2v2suu",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"37"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"37"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"37"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\217-Pro\\Desktop\\jh\\crewSNS-front\\src\\index.js",["71"],"import React, { useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport { createGlobalStyle } from 'styled-components';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store/configure';\r\n\r\nimport dotenv from 'dotenv';\r\ndotenv.config();\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n\r\n  body {\r\n    background-color: #fff3e0;\r\n  }\r\n`\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n    <GlobalStyle />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);",["72","73"],"C:\\Users\\217-Pro\\Desktop\\jh\\crewSNS-front\\src\\store\\configure.js",[],"C:\\Users\\217-Pro\\Desktop\\jh\\crewSNS-front\\src\\App.js",["74"],"C:\\Users\\217-Pro\\Desktop\\jh\\crewSNS-front\\src\\store\\index.js",[],"C:\\Users\\217-Pro\\Desktop\\jh\\crewSNS-front\\src\\store\\thunk\\thunkUser.js",[],"C:\\Users\\217-Pro\\Desktop\\jh\\crewSNS-front\\src\\component\\signUp.js",["75","76"],"import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport { Form, Input, Button, Row, Col } from 'antd';\r\nimport styled from 'styled-components';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { registReset } from '../store/storeUser';\r\nimport { fetchRegist } from '../store/thunk/thunkUser';\r\n\r\nconst SignUp = () => {\r\n    const [inputData, setInputData] = useState({ pw: null, pwCheck: false });\r\n    const onloadFocus = useRef();\r\n    const dispatch = useDispatch();\r\n    const { loading, regist, error } = useSelector(state => state.storeUser);\r\n    const history = useHistory();\r\n\r\n    //사용할 아이디 비밀번호 전부 입력 후 회원가입 버튼 누르면 createAsyncThunk를 통해 백엔드에 회원가입 요청을 보낸다.\r\n    //inputData.pwCheck :: 사용자가 입력한 두개의 비밀번호가 일치한지 확인한다.\r\n    const onInputSuccess = useCallback(e => {\r\n        if (inputData.pwCheck) dispatch(fetchRegist(e));\r\n    }, [inputData]);\r\n\r\n    //비밀번호를 서로 비교사기 위해서 useState inputData에 저장한다.\r\n    const insertPassword = useCallback(e => {\r\n        setInputData({ ...inputData, pw: e.target.value })\r\n    }, [inputData]);\r\n\r\n    //사용자가 입력한 비밀번호와 비밀번호 확인이 서로 같은지 확인한다.\r\n    const passwordCheck = useCallback(e => {\r\n        inputData.pw === e.target.value\r\n            ? setInputData({ ...inputData, pwCheck: true })\r\n            : setInputData({ ...inputData, pwCheck: false })\r\n    }, [inputData]);\r\n\r\n    //회원가입 버튼을 누르고 백엔드에서 응답이 오면 성공/실패 여부를 판단한다.\r\n    //useSelect로 regist, loading, error를 가지고 판단한다.\r\n    //loading과 regist모두 true이면 회원가입 성공, loading이 false이고 error가 true이면 회원가입 실패이다.\r\n    //회원가입은 아이디로만 중복확인한다.\r\n    useEffect(() => {\r\n        if (loading) {\r\n            if (regist) {\r\n                alert('회원가입 성공');\r\n                dispatch(registReset()); //회원가입 성공 후 storeUser의 regist값을 true에서 false로 변경해준다.\r\n                history.push('/');\r\n            }\r\n        }\r\n        if (loading === false && error) alert('중복되는 아이디 입니다.');\r\n    }, [regist, loading, error]);\r\n\r\n    //화면이 로딩되면 사용할 아이디 부분에 focus효과\r\n    useEffect(() => onloadFocus.current.focus(), []);\r\n\r\n    return (\r\n        <Row justify='center'>\r\n            <Col md={6} xs={22}>\r\n                <Form size='middle' onFinish={onInputSuccess} wrapperCol={{ md: 24, xs: 12 }}>\r\n                    <Form.Item name=\"id\" rules={[\r\n                        {\r\n                            required: true,\r\n                            message: '사용할 계정 입력해주세요'\r\n                        }\r\n                    ]}>\r\n                        <Input placeholder=\"사용할 아이디\" ref={onloadFocus} />\r\n                    </Form.Item>\r\n                    <Form.Item name=\"pw\" rules={[\r\n                        {\r\n                            required: true,\r\n                            message: '사용할 비밀번호 입력해주세요'\r\n                        }\r\n                    ]}>\r\n                        <Input.Password placeholder=\"사용할 비밀번호\" onChange={insertPassword} />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name=\"pwCheck\">\r\n                        <Input.Password placeholder=\"비밀번호 확인\" onChange={passwordCheck} />\r\n                        {inputData.pwCheck === false ? <PwCheck>비밀번호가 다릅니다.</PwCheck> : undefined}\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <LoginButton type=\"primary\" htmlType=\"submit\" loading={loading && true} block>회원가입</LoginButton>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default SignUp;\r\n\r\n\r\nconst LoginButton = styled(Button)`\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst PwCheck = styled.div`\r\n  font-weight: bold;\r\n  color: red;\r\n`;","C:\\Users\\217-Pro\\Desktop\\jh\\crewSNS-front\\src\\component\\main.js",["77"],"C:\\Users\\217-Pro\\Desktop\\jh\\crewSNS-front\\src\\component\\postAdd.js",["78","79","80","81","82","83","84","85"],"C:\\Users\\217-Pro\\Desktop\\jh\\crewSNS-front\\src\\store\\storeUser.js",[],"C:\\Users\\217-Pro\\Desktop\\jh\\crewSNS-front\\src\\store\\storePost.js",["86"],"C:\\Users\\217-Pro\\Desktop\\jh\\crewSNS-front\\src\\component\\notLogin.js",["87"],"import React, { useEffect, useCallback, useRef, memo } from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\nimport styled from 'styled-components';\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchLogin } from '../store/thunk/thunkUser';\r\n\r\nconst LoginForm = () => {\r\n    const onloadFocus = useRef();\r\n\r\n    const dispatch = useDispatch();\r\n    const { loading, error } = useSelector(state => state.storeUser);\r\n\r\n    // 사용자가 로그인을 위한 id, pw를 입력 후 로그인 버튼을 누르면 fetchLogin을 dispatch하여 백엔드로 로그인을 위한 데이터를 보낸다.\r\n    const onInputSuccess = useCallback(e => {\r\n        dispatch(fetchLogin({ ...e }));\r\n    }, []);\r\n\r\n    // 입력한 id, pw로 로그인에 성공하지 못했으면 id, pw중 한가지가 오류가 난 것이므로 error가 true가 된다. 그러면 alert이벤트를 발생시킨다.\r\n    useEffect(() => {\r\n        error && alert('아이디 또는 비밀번호가 틀렸습니다.');\r\n    }, [error]);\r\n\r\n    //화면이 로딩되면 로그인 아이디에 자동 포커싱\r\n    useEffect(() => {\r\n        onloadFocus.current.focus();\r\n    }, []);\r\n\r\n    return (\r\n        <Wrap>\r\n            <Form size='middle' onFinish={onInputSuccess} wrapperCol={{ md: 18, xs: 12 }}>\r\n                <Form.Item name=\"id\" rules={[\r\n                    {\r\n                        required: true,\r\n                        message: '계정 입력'\r\n                    }\r\n                ]}>\r\n                    <Input placeholder=\"아이디\" ref={onloadFocus} />\r\n                </Form.Item>\r\n                <Form.Item name=\"pw\" rules={[\r\n                    {\r\n                        required: true,\r\n                        message: '비밀번호 입력'\r\n                    }\r\n                ]}>\r\n                    <Input type=\"password\" placeholder=\"비밀번호\" />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    {/* loading이 true이면 loading 애니메이션이 동작한다. */}\r\n                    <LoginButton type=\"primary\" htmlType=\"submit\" loading={loading && true}>로그인</LoginButton>\r\n                    <Button type=\"ghost\"><Link to='/signup'>회원가입</Link></Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </Wrap>\r\n    );\r\n}\r\n\r\nexport default memo(LoginForm);\r\n\r\n\r\nconst LoginButton = styled(Button)`\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst Wrap = styled.div`\r\n  position: sticky;\r\n  top: 15px;\r\n`;","C:\\Users\\217-Pro\\Desktop\\jh\\crewSNS-front\\src\\component\\login.js",["88"],"import { memo, useCallback } from 'react';\r\nimport { Card, Typography, Row, Col, Button } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchLogout } from '../store/thunk/thunkUser';\r\nimport styled from 'styled-components';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst Login = () => {\r\n    const dispatch = useDispatch();\r\n    const { userNickname, userId } = useSelector(state => state.storeUser);\r\n    const onClickLogout = useCallback(() => {\r\n        dispatch(fetchLogout());\r\n    }, []);\r\n\r\n    return (\r\n        <Wrap>\r\n            <Card size=\"small\" hoverable>\r\n                <Row>\r\n                    <Col span={24} style={{ textAlign: 'center' }}>\r\n                        <Title level={4}>{userNickname === '#' ? userId : userNickname}님</Title></Col>\r\n                    <ColButton span={24}>\r\n                        <Link to='/addpost'>\r\n                            <Button type='ghost' block>포스트 작성</Button>\r\n                        </Link>\r\n                    </ColButton>\r\n                    <ColButton span={24}><Button danger block onClick={onClickLogout}>로그아웃</Button></ColButton>\r\n                </Row>\r\n            </Card>\r\n        </Wrap>\r\n    );\r\n}\r\n\r\nexport default memo(Login);\r\n\r\nconst Wrap = styled.div`\r\n  position: sticky;\r\n  top: 15px;\r\n`;\r\n\r\nconst ColButton = styled(Col)`\r\n    margin: 5px 0;\r\n`;","C:\\Users\\217-Pro\\Desktop\\jh\\crewSNS-front\\src\\component\\postList.js",["89"],"C:\\Users\\217-Pro\\Desktop\\jh\\crewSNS-front\\src\\store\\thunk\\thunkPost.js",[],"C:\\Users\\217-Pro\\Desktop\\jh\\crewSNS-front\\src\\component\\coverImage.js",["90","91"],"C:\\Users\\217-Pro\\Desktop\\jh\\crewSNS-front\\src\\component\\desc.js",["92"],{"ruleId":"93","severity":1,"message":"94","line":1,"column":17,"nodeType":"95","messageId":"96","endLine":1,"endColumn":26},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":18,"column":8,"nodeType":"103","endLine":18,"endColumn":10,"suggestions":"104"},{"ruleId":"101","severity":1,"message":"105","line":20,"column":8,"nodeType":"103","endLine":20,"endColumn":19,"suggestions":"106"},{"ruleId":"101","severity":1,"message":"107","line":47,"column":8,"nodeType":"103","endLine":47,"endColumn":32,"suggestions":"108"},{"ruleId":"101","severity":1,"message":"109","line":25,"column":8,"nodeType":"103","endLine":25,"endColumn":10,"suggestions":"110"},{"ruleId":"93","severity":1,"message":"111","line":3,"column":53,"nodeType":"95","messageId":"96","endLine":3,"endColumn":59},{"ruleId":"101","severity":1,"message":"105","line":22,"column":8,"nodeType":"103","endLine":22,"endColumn":10,"suggestions":"112"},{"ruleId":"101","severity":1,"message":"113","line":26,"column":8,"nodeType":"103","endLine":26,"endColumn":28,"suggestions":"114"},{"ruleId":"101","severity":1,"message":"115","line":37,"column":8,"nodeType":"103","endLine":37,"endColumn":16,"suggestions":"116"},{"ruleId":"101","severity":1,"message":"105","line":41,"column":8,"nodeType":"103","endLine":41,"endColumn":10,"suggestions":"117"},{"ruleId":"101","severity":1,"message":"107","line":49,"column":8,"nodeType":"103","endLine":49,"endColumn":20,"suggestions":"118"},{"ruleId":"101","severity":1,"message":"119","line":53,"column":8,"nodeType":"103","endLine":53,"endColumn":10,"suggestions":"120"},{"ruleId":"121","severity":1,"message":"122","line":77,"column":37,"nodeType":"123","endLine":77,"endColumn":114},{"ruleId":"93","severity":1,"message":"124","line":3,"column":8,"nodeType":"95","messageId":"96","endLine":3,"endColumn":13},{"ruleId":"101","severity":1,"message":"105","line":17,"column":8,"nodeType":"103","endLine":17,"endColumn":10,"suggestions":"125"},{"ruleId":"101","severity":1,"message":"105","line":15,"column":8,"nodeType":"103","endLine":15,"endColumn":10,"suggestions":"126"},{"ruleId":"101","severity":1,"message":"127","line":19,"column":8,"nodeType":"103","endLine":19,"endColumn":10,"suggestions":"128"},{"ruleId":"93","severity":1,"message":"129","line":5,"column":8,"nodeType":"95","messageId":"96","endLine":5,"endColumn":14},{"ruleId":"93","severity":1,"message":"130","line":7,"column":7,"nodeType":"95","messageId":"96","endLine":7,"endColumn":15},{"ruleId":"101","severity":1,"message":"115","line":24,"column":8,"nodeType":"103","endLine":24,"endColumn":31,"suggestions":"131"},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-native-reassign",["132"],"no-negated-in-lhs",["133"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'isLogin'. Either include them or remove the dependency array.","ArrayExpression",["134"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["135"],"React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.",["136"],"React Hook useEffect has a missing dependency: 'onscroll'. Either include it or remove the dependency array.",["137"],"'Upload' is defined but never used.",["138"],"React Hook useCallback has an unnecessary dependency: 'clickImage.current'. Either exclude it or remove the dependency array. Mutable values like 'clickImage.current' aren't valid dependencies because mutating them doesn't re-render the component.",["139"],"React Hook useCallback has missing dependencies: 'dispatch' and 'userId'. Either include them or remove the dependency array.",["140"],["141"],["142"],"React Hook useEffect has missing dependencies: 'history' and 'isLogin'. Either include them or remove the dependency array.",["143"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'axios' is defined but never used.",["144"],["145"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["146"],"'Slider' is defined but never used.","'settings' is assigned a value but never used.",["147"],"no-global-assign","no-unsafe-negation",{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},{"desc":"156","fix":"162"},{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},{"desc":"156","fix":"167"},{"desc":"156","fix":"168"},{"desc":"156","fix":"169"},{"desc":"170","fix":"171"},"Update the dependencies array to be: [dispatch, isLogin]",{"range":"172","text":"173"},"Update the dependencies array to be: [dispatch, inputData.pwCheck]",{"range":"174","text":"175"},"Update the dependencies array to be: [regist, loading, error, dispatch, history]",{"range":"176","text":"177"},"Update the dependencies array to be: [onscroll]",{"range":"178","text":"179"},"Update the dependencies array to be: [dispatch]",{"range":"180","text":"181"},"Update the dependencies array to be: []",{"range":"182","text":"183"},"Update the dependencies array to be: [dispatch, images, userId]",{"range":"184","text":"185"},{"range":"186","text":"181"},"Update the dependencies array to be: [createPost, dispatch, history]",{"range":"187","text":"188"},"Update the dependencies array to be: [history, isLogin]",{"range":"189","text":"190"},{"range":"191","text":"181"},{"range":"192","text":"181"},{"range":"193","text":"181"},"Update the dependencies array to be: [replyContent, dispatch, userId]",{"range":"194","text":"195"},[630,632],"[dispatch, isLogin]",[926,937],"[dispatch, inputData.pwCheck]",[1952,1976],"[regist, loading, error, dispatch, history]",[888,890],"[onscroll]",[1005,1007],"[dispatch]",[1109,1129],"[]",[1518,1526],"[dispatch, images, userId]",[1639,1641],[1820,1832],"[createPost, dispatch, history]",[1908,1910],"[history, isLogin]",[674,676],[561,563],[570,572],[924,947],"[replyContent, dispatch, userId]"]